// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id                String                  @id @default(uuid())
  email             String            @unique      
  password          String
  lastLoginAt       DateTime?

  urls URLMappings[]
  tokens UserSession[]
  @@index([email])
}

model UserSession {
  id        String   @id @default(uuid())
  userId    String
  user      Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt DateTime
  createdAt DateTime @default(now())

  @@index([userId])
}

model URLHits {
  id String @id @default(uuid())
  ip_address String
  createdAt DateTime @default(now())

  urlMapping URLMappings @relation(fields: [id], references: [id], onDelete: Cascade)
}

model URLMappings {
  id String @id @default(uuid())
  userId String
  user Users @relation(fields: [userId], onDelete: Cascade, references: [id])
  ogURL String
  mappedTail String @unique
  hitCount Int @default(0)
  createdAt DateTime @default(now())

  hits URLHits[]

  @@unique([ogURL, mappedTail])
  @@index([ogURL])
  @@index([mappedTail])
}
